/* Copyright 2017-2018 The Open SoC Debug Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef OSD_CL_CDM_H
#define OSD_CL_CDM_H

#include <osd/module.h>
#include <osd/osd.h>
#include <osd/packet.h>
#include <osd/hostmod.h>

#include <stdlib.h>

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @defgroup libosd-cl_cdm CDM client
 * @ingroup libosd
 *
 * @{
 */

/**
 * Information a Core Debug Module
 */
struct osd_cdm_desc {
    unsigned int di_addr; //!< DI address of the memory    
    uint16_t core_ctrl; //!< control signal for CPU core in bit
    uint16_t core_reg_upper; //!< Most significant bits of the SPR address in bit
};


/**
 * A single event generated by the CDM module
 *
 * 
 */
struct osd_cdm_event {
    uint16_t stall; //!< indicates the debugger that the CPU core is stalled.
};

typedef void (*osd_cl_cdm_handler_fn)(
    void * /* arg */, const struct osd_cdm_desc * /* cdm_desc */,
    const struct osd_cdm_event * /* event */);

struct osd_cdm_event_handler {
    const struct osd_cdm_desc *cdm_desc;
    osd_cl_cdm_handler_fn cb_fn;
    void *cb_arg;
};


/**
 * Populate the CDM descriptor with data from the debug module
 *
 * @param hostmod_ctx the host module handling the communication
 * @param cdm_di_addr DI address of the CDM module to get describe
 * @param[out] cdm_desc pre-allocated memory descriptor for the result
 * @return OSD_OK on success
 *         OSD_ERROR_WRONG_MODULE if the module at cdm_di_addr is not a CDM
 *         any other value indicates an error
 */
osd_result osd_cl_cdm_get_desc(struct osd_hostmod_ctx *hostmod_ctx,
                               unsigned int cdm_di_addr,
                               struct osd_cdm_desc *cdm_desc);

/**
 * Event handler to process CDM event, to be passed to a hostmod instance
 */
osd_result osd_cl_cdm_handle_event(void *arg, struct osd_packet *pkg);



/**@}*/ /* end of doxygen group libosd-cl_cdm */

#ifdef __cplusplus
}
#endif

#endif  // OSD_CL_CDM_H
